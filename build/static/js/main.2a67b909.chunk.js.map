{"version":3,"sources":["components/Modales.js","components/Excel.js","App.js","index.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","borderRadius","p","styleLink","styleImportante","Modales","_ref","verifyLink","setOpen","copiaLink","linkImg","setLinkImg","open","openGuia","setOpenGuia","openImportante","setOpenImportante","openParametros","setOpenParametros","separador","celda","setCelda","setSeparador","handleClose","string","url","URL","_","protocol","validarURL","handleCloseGuia","handleCloseImportante","handleCloseParametros","react_default","a","createElement","Modal","onClose","aria-labelledby","aria-describedby","Box","sx","Typography","align","id","variant","component","mt","TextField","size","label","onChange","e","target","value","Button","onClick","m","mb","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","AccordionDetails","Grid","container","item","xs","defaultValue","mx","EXTENSIONS","Excel","data","setData","_useState","useState","_useState2","Object","slicedToArray","colDefs","setColDefs","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","headers","setHeaders","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","cambios","handleOpenGuia","handleOpenImportante","handleOpenParametros","forEach","IMAGEN","length","replaceAll","includes","replace","useEffect","convertToJson","indexes","caracteristica","valores","celdas","row","dato","element","index","clave","push","Orden","charAt","parseInt","toString","valor","aux","substr","aux2","join","uniqueChars","filter","indexOf","map","head","title","field","filtrarColumnas","Fragment","startIcon","index_es","icon","faRotate","window","location","reload","color","faLink","alert","faDownload","react_csv","console","log","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","className","filename","separator","enclosingCharacter","faGear","faCircleQuestion","faCircleInfo","faFile","hidden","type","file","files","reader","FileReader","onload","event","bstr","result","workBook","workSheetName","SheetNames","workSheet","Sheets","fileData","sheet_to_json","header","encabezados","toUpperCase","splice","descCorta","descLarga","estado","categorias","stock","peso","imagen","impuestos","meta","metaEti","eliminarImg","oferta","descInicio","descTermino","descMonto","nombre","precioNeto","precioIVA","descPorcentaje","i","j","verificarCambio","moment","isValid","string1","substring","split","reverse","string2","lastIndexOf","test","slice","obj","Columna","Original","Modificacion","parts","name","extension","getExention","readAsBinaryString","padding","backgroundColor","height","dist_default","columns","localization","actions","pagination","labelDisplayedRows","labelRowsSelect","body","editTooltip","deleteTooltip","addTooltip","editRow","deleteText","saveTooltip","cancelTooltip","emptyDataSourceMessage","toolbar","searchPlaceholder","editable","onRowAdd","newData","Promise","resolve","reject","setTimeout","concat","toConsumableArray","onRowUpdate","oldData","dataUpdate","tableData","onRowDelete","dataDelete","options","showTitle","draggable","exportButton","pageSize","headerStyle","fontSize","rowStyle","components_Modales","App","maxWidth","components_Excel","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2a67b909.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Grid from '@mui/material/Grid';\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '80%',\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: '25px',\n    p: 4,\n  };\n\n  const styleLink = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '20%',\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: '25px',\n    p: 4,\n  };\n\n  const styleImportante = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '40%',\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    borderRadius: '25px',\n    p: 4,\n  };\n\n\nconst Modales = ({ verifyLink, setOpen, copiaLink, linkImg, setLinkImg, open, openGuia, \n  setOpenGuia, openImportante, setOpenImportante, openParametros, setOpenParametros,\n  separador, celda, setCelda, setSeparador}) => {\n\n    function validarURL(string) {\n      let url;\n      try {\n        url = new URL(string);\n      } catch (_) {\n        return false;  \n      }\n    \n      return url.protocol === \"http:\" || url.protocol === \"https:\";\n    }\n    \n    const handleClose = () => {\n      if(linkImg){\n        validarURL(linkImg)\n        verifyLink(copiaLink)\n      }\n      setOpen(false)}\n\n      const handleCloseGuia = () => {\n        setOpenGuia(false)}\n\n      const handleCloseImportante = () => {\n        setOpenImportante(false)}\n\n        const handleCloseParametros = () => {\n          setOpenParametros(false)}\n\n  return (\n    <div>\n    \n  <Modal\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"modal-modal-title\"\n    aria-describedby=\"modal-modal-description\"\n    >\n    <Box sx={styleLink}>\n      <Typography align=\"center\" id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n        Para agregar las imagenes copia la URL del sitio \n      </Typography>\n      <Typography align=\"center\" id=\"modal-modal-description\" sx={{ mt: 2 }}>\n      <TextField size=\"medium\" label=\"\" variant=\"standard\" \n      onChange={(e) => {\n        setLinkImg(e.target.value);\n      }} />\n      <Button  onClick={handleClose}variant=\"contained\" sx={{ m: 2 }}>Agregar</Button>\n      </Typography>\n      \n      \n    </Box>\n  </Modal>\n\n  <Modal\n    open={openGuia}\n    onClose={handleCloseGuia}\n    aria-labelledby=\"modal-modal-title\"\n    aria-describedby=\"modal-modal-description\"\n    >\n    <Box sx={style}>\n      <Typography  sx={{ mb: 2 }} align=\"center\" id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n        Guia de las Planillas de Productos y Descuentos\n      </Typography>\n     \n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n            \n              <Typography variant=\"button\">Productos Simples</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n            <Grid container >\n              <Grid item xs={6}>\n              <Typography variant=\"caption\">\n              <ul>\n                <li>SKU : Referencia nº</li>\n                <li>ESTADO : Activo (0/1)</li>\n                <li>NOMBRE DE PRODUCTO : Nombre*</li>\n                <li>CATEGORÍAS : Categorías (x,y,z...)</li>\n                <li>PRECIO CON IVA INCLUIDO : Precio impuestos incluidos</li>\n                <li>PRECIO NETO : Precio impuestos excluidos</li>\n                <li>STOCK : Cantidad</li>\n                <li>PESO : Peso</li>\n                <li>DESCRIPCIÓN CORTA : Resumen</li>\n                <li>DESCRIPCIÓN LARGA : Descripción</li>\n                <li>IMAGEN : URL's de las imágenes (x,y,z...)</li>\n                <li>META TÍTULO : Meta-título</li>\n                \n              </ul>\n              </Typography>\n              </Grid>\n              <Grid item xs={6}>\n              <Typography variant=\"caption\">\n              <ul>\n                <li>META DESCRIPCIÓN : Meta descripción</li>\n                <li>META ETIQUETAS : Meta keywords</li>\n                <li>EN OFERTA : En oferta</li>\n                <li>ELIMINAR IMAGENES : Elimine las imágenes existentes</li>\n                <li>CODIGO SAP : MPN </li>\n                <li>MARCA O FABRICANTE : Marca</li>\n                <li>PALABRAS CLAVE : Etiquetas (x,y,z...)</li>\n                <li>ID DE SKU RELACIONADOS : </li>\n                <li>ID IMPUESTOS: ID regla de impuestos</li>\n                <li>CARACTERÍSTICA 1,2,.. : Se refiere a los nombres de Característica</li>\n                <li>VALOR 1,2,.. : Se refiere a los valores de Característica</li>\n                <li>Las columnas anteriores se transforman en Característica (Nombre:Valor:Posición:Personalizado)</li>\n              </ul>\n              </Typography>\n              </Grid>\n            \n            </Grid>\n              \n            </AccordionDetails>  \n          </Accordion>\n          <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"button\">Productos Padres</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n          <Grid container >\n          <Grid item xs={6}>\n          <Typography variant=\"caption\">\n          <ul>\n            <li>SKU : Referencia nº</li>\n            <li>ESTADO : Activo (0/1)</li>\n            <li>NOMBRE DE PRODUCTO : Nombre*</li>\n            <li>CATEGORÍAS : Categorías (x,y,z...)</li>\n            <li>PRECIO CON IVA INCLUIDO : Precio impuestos incluidos</li>\n            <li>PRECIO NETO : Precio impuestos excluidos</li>\n            <li>STOCK : Cantidad</li>\n            <li>PESO : Peso</li>\n            <li>DESCRIPCIÓN CORTA : Resumen</li>\n            <li>DESCRIPCIÓN LARGA : Descripción</li>\n            <li>IMAGEN : URL's de las imágenes (x,y,z...)</li>\n            <li>META TÍTULO : Meta-título</li>\n            \n          </ul>\n          </Typography>\n          </Grid>\n          <Grid item xs={6}>\n          <Typography variant=\"caption\">\n          <ul>\n            <li>META DESCRIPCIÓN : Meta descripción</li>\n            <li>META ETIQUETAS : Meta keywords</li>\n            <li>EN OFERTA : En oferta</li>\n            <li>ELIMINAR IMAGENES : Elimine las imágenes existentes</li>\n            <li>CODIGO SAP : MPN </li>\n            <li>MARCA O FABRICANTE : Marca</li>\n            <li>PALABRAS CLAVE : Etiquetas (x,y,z...)</li>\n            <li>ID DE SKU RELACIONADOS : </li>\n            <li>ID IMPUESTOS: ID regla de impuestos</li>\n            <li>CARACTERÍSTICA 1,2,.. : Se refiere a los nombres de Característica</li>\n            <li>VALOR 1,2,.. : Se refiere a los valores de Característica</li>\n            <li>Las columnas anteriores se transforman en Característica (Nombre:Valor:Posición:Personalizado)</li>\n          </ul>\n          </Typography>\n          </Grid>\n        \n          </Grid>\n          </AccordionDetails>\n        </Accordion>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2a-content\"\n              id=\"panel2a-header\"\n            >\n              <Typography variant=\"button\">Productos Hijos</Typography>\n            </AccordionSummary>\n            <AccordionDetails >\n            <Grid container >\n            <Grid item xs={6}>\n            <Typography variant=\"caption\">\n            <ul>\n              <li>SKU PADRE </li>\n              <li>SKU HIJO</li>\n              <li>PRECIO CON IVA INCLUIDO</li>\n              <li>STOCK</li>\n              <li>PESO</li>\n            </ul>\n            </Typography>\n            </Grid>\n            <Grid item xs={6}>\n            <Typography variant=\"caption\">\n            <ul>\n            <li>IMAGEN</li>\n            <li>PREDETERMINADO</li>\n            <li>ATRIBUTO 1,2,..</li>\n            <li>VALOR 1,2,..</li>\n            <li>Las columnas anteriores se transformas en ATRIBUTOS y VALORES respectivamente</li>\n            </ul>\n            </Typography>\n            </Grid>\n          \n            </Grid>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2a-content\"\n              id=\"panel2a-header\"\n            >\n              <Typography variant=\"button\">Descuentos</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n            <Grid container >\n            <Grid item xs={6}>\n            <Typography variant=\"caption\">\n            <ul>\n              <li>ID </li>\n              <li>SKU</li>\n              <li>NOMBRE</li>\n              <li>PRECIO NETO</li>\n              <li>ID IMPUESTOS</li>\n              <li>CATEGORÍAS</li>\n            </ul>\n            </Typography>\n            </Grid>\n            <Grid item xs={6}>\n            <Typography variant=\"caption\">\n            <ul>\n            <li>MARCA</li>\n            <li>DESCUENTO POR MONTO</li>\n            <li>DESCUENTO POR %</li>\n            <li>FECHA DESDE (aaaa-mm-dd hh:mm:ss)</li>\n            <li>FECHA HASTA (aaaa-mm-dd hh:mm:ss)</li>\n            </ul>\n            </Typography>\n            </Grid>\n          \n          </Grid>\n            </AccordionDetails>\n          </Accordion>\n     \n      <Typography align=\"center\" id=\"modal-modal-description\" sx={{ mt: 2 }}>\n      <Button onClick={handleCloseGuia}variant=\"contained\" >OK</Button>\n      </Typography>\n    </Box>\n  </Modal>\n\n  <Modal\n  open={openImportante}\n  onClose={handleCloseImportante}\n  aria-labelledby=\"modal-modal-title\"\n  aria-describedby=\"modal-modal-description\"\n  >\n  <Box sx={styleImportante}>\n    <Typography id=\"modal-modal-title\" variant=\"button\" component=\"h2\">\n      Importante para considerar al usar el sistema \n    </Typography>\n    <Typography sx={{ mt: 2 }} variant=\"subtitle1\">\n          <ul>\n          <li>El sistema detecta planillas Excel de una sola hoja.</li>\n          <li>\"/&\\\\\\#+$~%':*?{} son caracteres restringidos en algunas columnas.</li>\n          <li>Las columnas numericas seran limpiadas de caracteres.</li>\n          </ul>\n    \n        </Typography>\n        <Typography align=\"center\" id=\"modal-modal-description\" sx={{ mt: 2 }}>\n      <Button onClick={handleCloseImportante}variant=\"contained\" >OK</Button>\n      </Typography>\n  </Box>\n</Modal>\n\n<Modal\n  open={openParametros}\n  onClose={handleCloseParametros}\n  aria-labelledby=\"modal-modal-title\"\n  aria-describedby=\"modal-modal-description\"\n  >\n  <Box sx={styleImportante}>\n    <Typography align=\"center\" id=\"modal-modal-title\" variant=\"button\" component=\"h2\">\n      Parametros\n    </Typography>\n    <Typography align=\"center\" sx={{ mt: 2 }} variant=\"subtitle1\">\n    <TextField\n    id=\"outlined\"\n    label=\"Delimitador\"\n    defaultValue={separador}\n    onChange={e => {\n      setSeparador(e.target.value);}}\n  />\n  <TextField\n          sx={{ mx: 2}}\n          id=\"outlined\"\n          label=\"Separador Caracteres\"\n          defaultValue={celda}\n          onChange={e => {\n            setCelda(e.target.value);}}\n        />\n    \n        </Typography>\n        <Typography align=\"center\" id=\"modal-modal-description\" sx={{ mt: 2 }}>\n      <Button onClick={handleCloseParametros}variant=\"contained\" >OK</Button>\n      </Typography>\n  </Box>\n</Modal>\n\n  </div>\n  )\n}\n\nexport default Modales","import React, { useState, useEffect } from 'react'\nimport * as XLSX from 'xlsx'\nimport { CSVLink } from \"react-csv\";\nimport MaterialTable from 'material-table'\nimport Button from '@mui/material/Button';\nimport Modales from './Modales';\nimport moment from 'moment';\nimport { faFile } from '@fortawesome/free-solid-svg-icons/faFile';\nimport { faRotate } from '@fortawesome/free-solid-svg-icons/faRotate';\nimport { faLink } from '@fortawesome/free-solid-svg-icons/faLink';\nimport { faGear } from '@fortawesome/free-solid-svg-icons/faGear';\nimport { faCircleInfo } from '@fortawesome/free-solid-svg-icons/faCircleInfo';\nimport { faDownload } from '@fortawesome/free-solid-svg-icons/faDownload';\nimport { faCircleQuestion } from '@fortawesome/free-solid-svg-icons/faCircleQuestion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst EXTENSIONS = ['xlsx', 'xls', 'csv']\n\n\nconst Excel = ({setOpen, open, data, setData}) => {\n    const [colDefs, setColDefs] = useState()\n    const [separador, setSeparador] = useState(']')\n    const [celda, setCelda] = useState('')\n    const [headers, setHeaders] = useState()\n    const [linkImg, setLinkImg] = useState()\n    const [openGuia, setOpenGuia] = useState(false);\n    const [openParametros, setOpenParametros] = useState(false);\n    const [openImportante, setOpenImportante] = useState(false);\n    let cambios = []\n    let copiaLink\n\n    const handleOpen = () => {\n      if(headers.includes(\"IMAGEN\")){\n        verifyLink(linkImg, data)\n        setOpen(true)\n      }else{\n        alert(\"Tu planilla no contiene la columna (IMAGEN)\")\n      }\n      \n    };   \n    \n    const handleOpenGuia = () => {\n        setOpenGuia(true)\n    }; \n\n    const handleOpenImportante = () => {\n      setOpenImportante(true)\n  }; \n\n  const handleOpenParametros = () => {\n      setOpenParametros(true)\n}; \n    \n    const verifyLink =  (copiaLink) => {\n      if(copiaLink){\n        data.forEach((item) => {\n          if(item.IMAGEN.length === 0){\n\n          }else{\n            item.IMAGEN= item.IMAGEN.replaceAll(' ','');\n            if(item.IMAGEN.includes('|')){\n              item.IMAGEN= item.IMAGEN.replace(copiaLink,'');\n              item.IMAGEN= item.IMAGEN.replaceAll('|'+copiaLink,'|');\n\n            }else{\n              item.IMAGEN= item.IMAGEN.replace(copiaLink,'');\n            }\n          }\n          \n         \n      })\n    }else{\n        if(linkImg){\n          data.forEach((item) => {\n            if(item.IMAGEN.length === 0){\n              \n            }else{\n              item.IMAGEN= item.IMAGEN.replaceAll(' ','');\n              if(item.IMAGEN.includes('|')){\n                  item.IMAGEN= linkImg+item.IMAGEN\n                  item.IMAGEN=item.IMAGEN.replace(/[|]/g, '|'+linkImg)\n    \n              }else{\n                  item.IMAGEN= linkImg+item.IMAGEN\n              }\n            }\n            \n         \n      })\n        }\n        \n      }}\n    // eslint-disable-next-line\n    useEffect(() => { verifyLink( copiaLink) }, [copiaLink])\n\n    const filtrarColumnas = (indexes) => {\n        let uniqueChars = indexes.filter((element, index) => {\n          return indexes.indexOf(element) === index;\n        });\n        setHeaders(uniqueChars);\n        const aux2 = uniqueChars.map(head => ({title: head, field: head}))\n        setColDefs(aux2);\n      }\n\n    const getExention = (file) => {\n        const parts = file.name.split('.')\n        const extension = parts[parts.length - 1]\n        return EXTENSIONS.includes(extension) // return boolean\n      }\n    \n      const convertToJson = (headers, data) => {\n        const indexes = []\n        let caracteristica = []\n        let valores = []\n        const celdas = []\n        if(headers.includes('SKU HIJO')){\n          data.forEach(row => {\n            let dato = {}\n            row.forEach((element, index) => {\n              \n                if(headers[index].includes('ATRIBUTO')){\n                  if(element === 'Color'){\n                    let clave = element+ ':color'\n                    caracteristica.push(clave)\n                    var Orden = headers[index].charAt(headers[index].length-1);\n                    parseInt(Orden)\n                    Orden--;\n                    Orden.toString()\n                    caracteristica.push(':'+Orden+ '|')\n                  }\n                  else{\n                    let clave = element+ ':select'\n                    caracteristica.push(clave)\n                    Orden = headers[index].charAt(headers[index].length-1);\n                    parseInt(Orden)\n                    Orden--;\n                    Orden.toString()\n                    caracteristica.push(':'+Orden+ '|')\n                  }   \n                }else{\n                  if(headers[index].includes('VALOR')){\n                    let valor = element+ ':' \n                    valores.push(valor)\n                    Orden = headers[index].charAt(headers[index].length-1);\n                    parseInt(Orden)\n                    Orden--;\n                    Orden.toString()\n                    valores.push(Orden+ '|')\n                    \n                  }\n                 \n                else{\n                  indexes.push(headers[index])\n                  dato[headers[index]] = element  \n                }\n                }\n                 \n            })\n            if(caracteristica.length>0 ){\n              indexes.push('ATRIBUTOS')\n              let aux = caracteristica.toString().replace(/[,]/g, \"\");\n              dato['ATRIBUTOS'] = aux.substr(0, aux.length - 1);\n              caracteristica = []\n              indexes.push('VALORES')\n              let aux2 = valores.toString().replace(/[,]/g, \"\");\n              dato['VALORES'] = aux2.substr(0, aux2.length - 1);\n              celdas.push(dato)\n              valores = []\n            }\n          \n          })\n        }else{\n          data.forEach(row => {\n            let dato = {}\n            row.forEach((element, index) => {\n              if(headers[index].includes('CARACTERÍSTICA') ||headers[index].includes('VALOR') ){\n                if(headers[index].includes('CARACTERÍSTICA')){\n                  let clave = element+ ':'\n                  caracteristica.push(clave)\n                }else{\n                  let valor = element+ ':' \n                  caracteristica.push(valor)\n                  var Orden = headers[index].charAt(headers[index].length-1);\n                  parseInt(Orden)\n                  Orden--;\n                  Orden.toString()\n                  caracteristica.push(Orden+ '|')\n                }\n              }else{\n                indexes.push(headers[index])\n                dato[headers[index]] = element  \n              }\n              \n            })  \n              if(caracteristica.length>0){\n                indexes.push('CARACTERÍSTICA')\n                const aux = caracteristica.join('');\n                dato['CARACTERÍSTICA'] = aux.substr(0, aux.length - 1);\n                celdas.push(dato)\n              }else{\n              celdas.push(dato)}\n            \n            caracteristica = []\n        });\n        } \n        filtrarColumnas(indexes)\n        return celdas\n        }\n    function Recargar() {\n      window.location.reload(false);\n    }\n     const exportExcel = () => {\n      console.log(cambios)\n      const worksheet = XLSX.utils.json_to_sheet(cambios);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n      XLSX.writeFile(workbook, \"cambios.xlsx\");\n     }\n    \n\n    const importExcel = (e) => {\n      \n        const file = e.target.files[0]\n    \n        const reader = new FileReader()\n        reader.onload = (event) => {\n          //parseo de datos\n          const bstr = event.target.result\n          const workBook = XLSX.read(bstr, { type: \"binary\" })\n          //obtener hoja\n          const workSheetName = workBook.SheetNames[0]\n          const workSheet = workBook.Sheets[workSheetName]\n      \n          //conversion en arreglo\n          const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1})\n          const encabezados = fileData[0]\n          const headers = [];\n          encabezados.forEach(element => {\n            headers.push(element.toUpperCase());\n          });\n          //Fuera el header \n          fileData.splice(0, 1)\n          //Indices de las descripciones\n          let descCorta = headers.indexOf('DESCRIPCIÓN CORTA')\n          let descLarga = headers.indexOf('DESCRIPCIÓN LARGA')\n          let estado = headers.indexOf('ESTADO')\n          let categorias = headers.indexOf('CATEGORÍAS')\n          let stock = headers.indexOf('STOCK')\n          let peso = headers.indexOf('PESO')\n          let imagen = headers.indexOf('IMAGEN')\n          let impuestos = headers.indexOf('ID IMPUESTOS')\n          let meta = headers.indexOf('META TÍTULO')\n          let metaEti = headers.indexOf('META ETIQUETAS')\n          let eliminarImg = headers.indexOf('ELIMINAR IMAGENES')\n          let oferta = headers.indexOf('EN OFERTA')\n          let descInicio = headers.indexOf('FECHA DESDE (AAAA-MM-DD HH:MM:SS)')\n          let descTermino = headers.indexOf('FECHA HASTA (AAAA-MM-DD HH:MM:SS)')\n          let descMonto = headers.indexOf('DESCUENTO POR MONTO')\n          let nombre = headers.indexOf('NOMBRE')\n          let precioNeto = headers.indexOf('PRECIO')\n          let precioIVA = headers.indexOf('PRECIO CON IVA INCLUIDO')\n          let descPorcentaje = headers.indexOf('DESCUENTO POR %')\n\n          \n          //validacion de caracteres\n          for(let i=0; i<fileData.length; i++){\n            for(let j=0; j<fileData[i].length; j++){\n              let verificarCambio = fileData[i][j]\n              \n              //validacion nulos\n              if (typeof fileData[i][j] == 'undefined') {\n                fileData[i][j]= ''\n              }\n              //barrido de caracteres\n              // eslint-disable-next-line \n              if(j===descCorta || j===descLarga){\n                // eslint-disable-next-line \n                fileData[i][j]= fileData[i][j].toString().replace(/[\"/&\\\\\\#+$~%':*?{}]/g, '')\n              } \n              if(j===categorias || j===imagen | j===meta || j===metaEti){\n\n                if(fileData[i][j].toString().includes(',')){\n                  fileData[i][j]=fileData[i][j].replace(/[,]/g, \"|\");\n                }\n                if(fileData[i][j].toString().includes(';')){\n                  fileData[i][j]=fileData[i][j].replace(/[;]/g, \"|\");\n                }\n              }\n              if(j=== descInicio|| j===descTermino){\n                if(moment(fileData[i][j], \"YYYY-MM-DD HH:mm:ss\", true).isValid()=== false){\n                  // eslint-disable-next-line \n                  fileData[i][j]= fileData[i][j].toString().replace(/[/]/g, '-')\n              //Verificar orden de la fecha\n                 if(fileData[i][j].charAt(2)==='-'){\n                  let string1 = fileData[i][j].substring(0, 10).split('').reverse().join('')\n                  let string2 = fileData[i][j].substring(11)\n                  fileData[i][j] = string1+' '+string2\n                 } \n                                                 \n                }   \n              }\n              else{\n                if(j=== nombre || j=== precioNeto || j=== precioIVA){\n                  if(j=== precioNeto || j=== precioIVA){\n                    fileData[i][j]=fileData[i][j].toString().replace(/[$]/g, \"\");\n                    if(fileData[i][j].toString().includes(',')){\n                      let aux = fileData[i][j].toString()\n                      fileData[i][j]=aux.substring(0, aux.lastIndexOf(','))\n                    }\n                    \n                  }\n                }else{\n                  //puntos por barras\n                  if(typeof fileData[i][j] ==='number'){\n                    fileData[i][j]=fileData[i][j].toString().replace(/[.]/g, \"|\");\n                  }\n                  // eslint-disable-next-line \n                  fileData[i][j]= fileData[i][j].toString().replace(/[&\\\\\\/#+$<>~%':*?{}=]/g, '')\n\n                  if(fileData[i][j].includes(']')){\n                    fileData[i][j]=fileData[i][j].replace(/]/g, \")\");\n                  }\n                  if(fileData[i][j].includes('[')){\n                    fileData[i][j]=fileData[i][j].replace(/[[]/g, \"(\");\n                  }\n                  //validacion inicio y fin con _\n                  if( /^_/i.test(fileData[i][j]) ) {\n                    fileData[i][j]=fileData[i][j].slice(1)\n                  }\n                  if( /_$/i.test(fileData[i][j])) {\n                    fileData[i][j]=fileData[i][j].slice(0, -1)\n                  }\n                  //validacion de columnas numericas\n                  if(j===estado||j===categorias||j===stock||j===peso\n                    ||j===impuestos||j===eliminarImg||j===oferta || j===descMonto ){\n                    fileData[i][j]= fileData[i][j].toString().replace(/[^\\d.|]/g, '');\n                  }\n                  if(j===descPorcentaje){\n                    //Quitar los porcentajes\n                    fileData[i][j]= fileData[i][j].toString().replace(/[|]/g, '');\n                    fileData[i][j]= fileData[i][j].toString().replace(/[^\\d]/g, '');\n                  }\n                }\n                \n              }\n              if(verificarCambio !== fileData[i][j]){\n                let obj = {\n                  Columna: headers[i],\n                  Original: verificarCambio,\n                  Modificacion: fileData[i][j]\n                }\n                cambios.push(obj)\n              }\n              \n          }\n        } \n        console.log(cambios)\n          setData(convertToJson(headers, fileData))   \n        }\n    \n        if (file) {\n          if (getExention(file)) {\n            reader.readAsBinaryString(file)\n          }\n          else {\n            alert(\"Archivo no valido\")\n          }\n        } else {\n          setData([])\n          setColDefs([])\n        }\n      }  \n  return (\n    <div>\n    \n      {data? <><Button size=\"small\" sx={{m: 2 , mx: 10 }} startIcon={<FontAwesomeIcon icon={faRotate} />} onClick={Recargar} variant=\"contained\" component=\"label\">Recargar</Button>\n      <Button size=\"small\" variant=\"contained\" color=\"warning\" startIcon={<FontAwesomeIcon icon={faLink} />} onClick={handleOpen}>Link imagenes</Button> }\n      <Button  size=\"small\" sx={{ mx: 2}} color=\"success\" startIcon={<FontAwesomeIcon icon={faDownload} />} variant=\"contained\">\n      <CSVLink  onClick={exportExcel}  sx={{ mx: 2}} data={data} className=\"btn-descargar\"  headers={headers} filename={\"planilla.csv\"} separator={separador} enclosingCharacter={celda}>\n      Descargar csv\n    </CSVLink></Button> <Button size=\"small\" sx={{ mx: 2}} variant=\"contained\" color=\"inherit\" startIcon={<FontAwesomeIcon icon={faGear} />} onClick={handleOpenParametros}>Parametros</Button>\n    <Button size=\"small\" sx={{ mx: 2}} variant=\"contained\" color=\"inherit\" startIcon={<FontAwesomeIcon icon={faCircleQuestion} />} onClick={handleOpenGuia}>Guia Planilla</Button> \n    <Button size=\"small\" sx={{ mx: 2}} variant=\"contained\" color=\"error\" onClick={handleOpenImportante} startIcon={<FontAwesomeIcon icon={faCircleInfo} />} >Importante</Button></>: <div>\n    <Button size=\"small\" sx={{ m: 2, mx: 10 }}  variant=\"contained\" startIcon={<FontAwesomeIcon icon={faFile} />} component=\"label\">Subir Archivo\n    <input hidden type=\"file\" onChange={importExcel} /></Button>  <Button size=\"small\" sx={{ mx: 4}} variant=\"contained\" color=\"inherit\" startIcon={<FontAwesomeIcon icon={faGear} />} onClick={handleOpenParametros}>Parametros</Button>\n       <Button size=\"small\" sx={{ mx: 4}} variant=\"contained\" color=\"inherit\" startIcon={<FontAwesomeIcon icon={faCircleQuestion} />} onClick={handleOpenGuia}>Guia Planilla</Button>\n    <Button size=\"small\" sx={{ mx: 4}} variant=\"contained\" color=\"error\" onClick={handleOpenImportante} startIcon={<FontAwesomeIcon icon={faCircleInfo} />} >Importante</Button></div>}  \n\n    {data? <><div style={{ padding: \"40px\", backgroundColor:\"#949494\", height: \"100% \" }}>   \n    <MaterialTable\n    columns={colDefs}\n    data={data}\n    title=\"Planilla Productos\"\n  \n    localization={{\n      header: {\n        actions: '',},\n        pagination: {labelDisplayedRows: '{from}-{to} de {count}',\n        labelRowsSelect: \"registros\"},\n      body: {\n        editTooltip: \"Editar\",\n        deleteTooltip: \"Eliminar\",\n        addTooltip: \"Añadir\",\n        editRow: { deleteText: 'Estas seguro que deseas eliminar el registro ?',\n        saveTooltip: 'Guardar',\n        cancelTooltip: 'Cancelar'},\n        emptyDataSourceMessage: (\n            <h2>\n                Carga la Planilla (.xlsx, .xls) \n            </h2>\n        ),\n          },\n            toolbar: {\n                searchPlaceholder: 'Buscar'\n            }\n        }}\n      editable={{\n        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n              \n              resolve();\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n              resolve();\n            }, 1000)\n          }),\n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              \n              resolve()\n            }, 1000)\n          }),\n      }}\n    \n        options={{\n          showTitle:false,\n          draggable:false,\n          exportButton: false,\n          pageSize:10, \n          headerStyle: {\n            backgroundColor: '#474747',\n            padding: '1px',\n            color: '#fff',\n            fontSize: 10,\n            align: 'center',\n          },\n          padding:'dense',\n          rowStyle: {\n            padding: '1px',\n            fontSize: 12,\n            backgroundColor: '#EEE',\n            color: '#000',\n          }\n        }}\n      />\n   \n    </div></>:<><div style={{ padding: \"40px\", backgroundColor:\"#949494\", height: \"100% \" }}>   \n    <MaterialTable\n    columns={colDefs}\n    data={data}\n    title=\"Planilla Productos\"\n  \n    localization={{\n      header: {\n        actions: 'ACCIONES',},\n        pagination: {labelDisplayedRows: '{from}-{to} de {count}',\n        labelRowsSelect: \"registros\"},\n      body: {\n        editTooltip: \"Editar\",\n        deleteTooltip: \"Eliminar\",\n        addTooltip: \"Añadir\",\n        editRow: { deleteText: 'Estas seguro que deseas eliminar el registro ?' },\n        emptyDataSourceMessage: (\n            <h2>\n                Carga la Planilla (.xlsx, .xls) \n            </h2>\n        ),\n          },\n            toolbar: {\n                searchPlaceholder: 'Buscar'\n            }\n        }}\n    \n    \n        options={{\n          showTitle:false,\n          draggable:false,\n          header:false,\n          exportButton: false,\n          pageSize:10, \n          headerStyle: {\n            backgroundColor: '#474747',\n            padding: '1px',\n            color: '#fff',\n            fontSize: 10,\n            align: 'center',\n          },\n          padding:'dense',\n          rowStyle: {\n            padding: '1px',\n            fontSize: 12,\n            backgroundColor: '#EEE',\n            color: '#000',\n          }\n        }}\n      />\n   \n    </div></>}\n\n    <Modales  verifyLink={verifyLink} setOpen={setOpen}\n     linkImg={linkImg} copiaLink={copiaLink} openGuia={openGuia} \n     setLinkImg={setLinkImg} open={open} setOpenGuia={setOpenGuia}\n     openImportante={openImportante} setOpenImportante={setOpenImportante}\n     openParametros={openParametros} setOpenParametros={setOpenParametros}\n     separador={separador} celda={celda} setSeparador={setSeparador} setCelda={setCelda}/>\n    </div>\n  )\n}\n\nexport default Excel","import React, { useState } from 'react';\nimport './App.css';\nimport Excel from './components/Excel';\n\nfunction App() {\n  const [data, setData] = useState()\n  const [open, setOpen] = useState(false);\n  \n  return (\n    <div style={{ maxWidth: \"100%\", backgroundColor:\"#000\" }}>\n      <h1 className=\"titulo\" align=\"center\">Exportador de Planillas CSV</h1>\n      <h4 className=\"titulo\" align='center'>Enexum</h4>\n      <Excel setOpen={setOpen}  open={open}  data={data} setData={setData}  />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"code\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}